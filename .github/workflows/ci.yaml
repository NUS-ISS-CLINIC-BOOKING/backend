name: CI with Maven + Docker + GCP Artifact Registry

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Shutdown system MySQL service (if running)
        run: sudo service mysql stop

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Build with Maven
        id: build-step
        run: mvn clean install

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker to use GCP Artifact Registry
        run: gcloud auth configure-docker $(echo ${{ secrets.GCP_ARTIFACT_REPO }} | cut -d/ -f1)

      - name: Build and Tag Docker Images
        run: |
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          TAG=${{ github.sha }}

          # Build images with both :latest and :<sha> tags
          build_push() {
            SERVICE=$1
            docker build -t $REPO/$SERVICE:$TAG -t $REPO/$SERVICE:latest -f $SERVICE/Dockerfile $SERVICE/
          }

          build_push auth-service &
          build_push clinic-service &
          build_push queue-service &
          build_push patient-medicine-service &
          build_push gateway &
          wait

      - name: Push Docker Images to GCP Artifact Registry
        run: |
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          TAG=${{ github.sha }}

          # Push both tags
          push_image() {
            SERVICE=$1
            docker push $REPO/$SERVICE:$TAG
            docker push $REPO/$SERVICE:latest
          }

          push_image auth-service &
          push_image clinic-service &
          push_image queue-service &
          push_image patient-medicine-service &
          push_image gateway &
          wait
