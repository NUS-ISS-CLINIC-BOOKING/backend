name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Shutdown system MySQL service (if running)
        run: sudo service mysql stop

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Build with Maven
        id: build-step
        run: mvn clean install

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker to use GCP Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_ARTIFACT_REGION }}-docker.pkg.dev

      - name: Build Docker Images (Parallel)
        run: |
          REGION=${{ secrets.GCP_ARTIFACT_REGION }}
          PROJECT=${{ secrets.GCP_PROJECT_ID }}
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          TAG=${{ github.sha }}

          docker build -t $REGION-docker.pkg.dev/$PROJECT/$REPO/auth-service:$TAG -f auth-service/Dockerfile auth-service/ &
          docker build -t $REGION-docker.pkg.dev/$PROJECT/$REPO/clinic-service:$TAG -f clinic-service/Dockerfile clinic-service/ &
          docker build -t $REGION-docker.pkg.dev/$PROJECT/$REPO/queue-service:$TAG -f queue-service/Dockerfile queue-service/ &
          docker build -t $REGION-docker.pkg.dev/$PROJECT/$REPO/patient-medicine-service:$TAG -f patient-medicine-service/Dockerfile patient-medicine-service/ &
          docker build -t $REGION-docker.pkg.dev/$PROJECT/$REPO/gateway:$TAG -f gateway/Dockerfile gateway/ &
          wait

      - name: Push Docker Images to Artifact Registry (Parallel)
        run: |
          REGION=${{ secrets.GCP_ARTIFACT_REGION }}
          PROJECT=${{ secrets.GCP_PROJECT_ID }}
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          TAG=${{ github.sha }}

          docker push $REGION-docker.pkg.dev/$PROJECT/$REPO/auth-service:$TAG &
          docker push $REGION-docker.pkg.dev/$PROJECT/$REPO/clinic-service:$TAG &
          docker push $REGION-docker.pkg.dev/$PROJECT/$REPO/queue-service:$TAG &
          docker push $REGION-docker.pkg.dev/$PROJECT/$REPO/patient-medicine-service:$TAG &
          docker push $REGION-docker.pkg.dev/$PROJECT/$REPO/gateway:$TAG &
          wait
