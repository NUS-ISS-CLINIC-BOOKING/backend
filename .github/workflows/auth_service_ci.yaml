name: CI auth-service

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - 'gateway/**'
      - '.github/workflows/auth_service_ci.yaml'
      - 'common/**'
  pull_request:
    branches: ["main"]
    paths:
      - 'gateway/**'
      - '.github/workflows/auth_service_ci.yaml'
      - 'common/**'

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.meta.outputs.tag }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -pl auth-service -am clean install

      - name: Build Docker Image
        run: |
          TAG=${{ github.sha }}
          docker build -t auth-service:ci-temp -t ${{ secrets.GCP_ARTIFACT_REPO }}/auth-service:$TAG -f auth-service/Dockerfile auth-service/

      - name: Save Docker Image to TAR
        run: docker save auth-service:ci-temp -o auth-service-image.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: auth-service-image
          path: auth-service-image.tar

      - name: Export Docker tag
        id: meta
        run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

  push:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: auth-service-image
          path: .

      - name: Load Docker Image from file
        run: docker load -i auth-service-image.tar

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker for GCP
        run: |
          REGION=$(echo "${{ secrets.GCP_ARTIFACT_REPO }}" | cut -d/ -f1)
          gcloud auth configure-docker $REGION

      - name: Push Docker Image to GCP
        run: |
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          RAW_TAG=${{ needs.build.outputs.tag }}

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TAG=${RAW_TAG}-pr
          else
            TAG=${RAW_TAG}
          fi

          docker tag auth-service:ci-temp $REPO/auth-service:$TAG
          docker push $REPO/auth-service:$TAG

          if [[ "${{ github.event_name }}" != "pull_request" ]]; then
            docker tag $REPO/auth-service:$TAG $REPO/auth-service:latest
            docker push $REPO/auth-service:latest
          fi

  deploy:
    needs: [ build, push ]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Export Docker tag
        run: echo "TAG=${{ needs.build.outputs.tag }}" >> $GITHUB_ENV

      # 👇👇👇 这里写你之后的部署逻辑，比如 kubectl set image 或 helm upgrade
      - name: Deploy Placeholder
        run: |
          echo "Ready to deploy auth-service:$TAG to GKE"