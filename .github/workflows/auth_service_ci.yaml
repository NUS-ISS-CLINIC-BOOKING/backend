name: CI auth-service

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'gateway/**'
      - '.github/workflows/auth_service_ci.yaml'
      - 'common/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'gateway/**'
      - '.github/workflows/auth_service_ci.yaml'
      - 'common/**'
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.meta.outputs.tag }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -pl auth-service -am clean install

      - name: Build Docker Image
        run: |
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          TAG=${{ github.sha }}
          docker build -t $REPO/auth-service:$TAG -f auth-service/Dockerfile auth-service/

      - name: Save Docker Image to file
        run: |
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          TAG=${{ github.sha }}
          docker save $REPO/auth-service:$TAG -o auth-service-image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: auth-service-image
          path: auth-service-image.tar

      - name: Export Docker tag
        id: meta
        run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

  push:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: auth-service-image
          path: .

      - name: Load Docker image from file
        run: |
          docker load -i auth-service-image.tar

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker for GCP
        run: |
          REGION=$(echo "${{ secrets.GCP_ARTIFACT_REPO }}" | cut -d/ -f1)
          gcloud auth configure-docker $REGION

      - name: Push Docker Image
        run: |
          REPO=${{ secrets.GCP_ARTIFACT_REPO }}
          TAG=${{ needs.build.outputs.tag }}

          docker push $REPO/auth-service:$TAG
          docker tag $REPO/auth-service:$TAG $REPO/auth-service:latest
          docker push $REPO/auth-service:latest
